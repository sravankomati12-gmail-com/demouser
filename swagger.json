{
  "swagger": "2.0",

  "info": {
    "openapi": "3.0.0",
    "version": "1.0.0",
    "title": "Implementing passport authentication in node js ",
    "description": "My User Project Application API",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "description": "JWT Authorization header using the Bearer scheme. \r\n\r\n Enter 'Bearer' [space] and then your token in the text input below.\r\n\r\nExample: \"Bearer 12345abcdef\"",
      "name": "Authorization",
      "in": "header"
    }
  },
  "host": "localhost:4006",
  "basePath": "/",
  "tags": [
    {
      "name": "Users",
      "description": "API for users in the system"
    },
    {
      "name": "Blog",
      "description": "API for BLog in the system"
    }
  ],
  "schemes": ["http", "https"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/api/user/add": {
      "post": {
        "tags": ["Users"],
        "description": "Create user",
        "produces": ["application/json"],

        "parameters": [
          {
            "name": "vm",
            "required": ["name", "email", "password"],
            "in": "body",
            "properties": {
              "name": {
                "$ref": "#/definitions/name"
              },
              "email": {
                "$ref": "#/definitions/email"
              },
              "password": {
                "$ref": "#/definitions/password"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Business Exception",
            "schema": {
              "$ref": "#/definitions/business_exception"
            }
          }
        }
      }
    },
    "/api/user/login": {
      "post": {
        "tags": ["Users"],
        "description": "login user",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "vm",
            "required": ["email", "password"],
            "in": "body",
            "properties": {
              "email": {
                "$ref": "#/definitions/email"
              },
              "password": {
                "$ref": "#/definitions/password"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Business Exception",
            "schema": {
              "$ref": "#/definitions/business_exception"
            }
          }
        }
      }
    },
    "/api/blog/add": {
      "post": {
        "tags": ["Blog"],
        "description": "Create Blog",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "vm",
            "required": ["tittle", "description"],
            "in": "body",
            "properties": {
              "tittle": {
                "$ref": "#/definitions/tittle"
              },
              "description": {
                "$ref": "#/definitions/description"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Business Exception",
            "schema": {
              "$ref": "#/definitions/business_exception"
            }
          }
        }
      }
    },
    "/api/blog/getbyid": {
      "get": {
        "tags": ["Blog"],
        "description": "Create Blog",
        "consumes": " multipart/form-data",
        "produces": ["application/json"],
        "security": [
          {
            "jwt": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Collection ID",
            "example": "5c0728badc70ea3dec00d8e6"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Business Exception",
            "schema": {
              "$ref": "#/definitions/business_exception"
            }
          }
        }
      }
    },
    "/api/blog/list": {
      "get": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "tags": ["Blog"],
        "description": "list of Blog",
        "produces": ["application/json"],

        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Business Exception",
            "schema": {
              "$ref": "#/definitions/business_exception"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "id": {
      "type": "string",
      "description": "Collection ID",
      "example": "5c0728badc70ea3dec00d8e6"
    },
    "name": {
      "type": "string",
      "description": "username",
      "example": "ram"
    },
    "email": {
      "type": "string",
      "description": "User logon",
      "example": "LUCIANO"
    },
    "password": {
      "type": "string",
      "description": "User password",
      "example": "1234"
    },
    "description": {
      "type": "string",
      "description": "blog description",
      "example": "jhbcjh"
    },
    "tittle": {
      "type": "string",
      "description": "blog description",
      "example": "jhbcjh"
    },
    "error": {
      "type": "object",
      "description": "Error data",
      "properties": {
        "msg": {
          "type": "string",
          "description": "Error message",
          "example": "User not found"
        }
      }
    },
    "business_exception": {
      "type": "array",
      "description": "Error array",
      "items": {
        "$ref": "#/definitions/error"
      }
    }
  }
}
